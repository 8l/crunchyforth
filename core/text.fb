macros
: [char] char lit, ;
words
: s" [char] " parse ;
: count 1+ dup 1- 1@ ;
: s, here over allot swap 1copy ;
: cs, dup 1, s, ;
: zs, s, 0 1, ;
: ," s" cs, ;
: text char parse ;
macros
: c" $eb 1, here s" $ff min cs, lit,  ;
: [text] $eb 1, here char parse $ff min cs, lit, ;

words
variable held 0 ,
variable holdbuf 32 allot
: hold 31 held @ - holdbuf + 1! held 1+! ;
: n>ascii 10 -? -if 48 else 87 then + ;
: b# /mod swap n>ascii hold ;
: # 10 b# ;
: $# 16 b# ;
: <# 0 held ! ;
: #> drop 32 held @ - holdbuf + held @ ;
: #. 32 for # #? /if rdrop ;; then next ;









































































































































































































































































































































































































































































